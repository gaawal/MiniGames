{"version":3,"sources":["../file:/Users/jiahualink/Code/cocos/Balloon/assets/script/file:/Users/jiahualink/Code/cocos/Balloon/assets/script/Balloon.ts","../file:/Applications/Cocos/Creator/3.8.1/CocosCreator.app/Contents/Resources/resources/3d/engine/editor/assets/tools/file:/Applications/Cocos/Creator/3.8.1/CocosCreator.app/Contents/Resources/resources/3d/engine/editor/assets/tools/debug-view-runtime-control.ts","../file:/Users/jiahualink/Code/cocos/Balloon/assets/script/file:/Users/jiahualink/Code/cocos/Balloon/assets/script/DifficultyConfig.ts","../file:/Users/jiahualink/Code/cocos/Balloon/assets/script/file:/Users/jiahualink/Code/cocos/Balloon/assets/script/GameController.ts"],"names":["ccclass","_decorator","property","Balloon","_dec","_dec2","Color","_dec3","LabelComponent","_dec4","SpriteComponent","_dec5","SpriteFrame","_dec6","AudioClip","_dec7","AudioSource","_dec8","Node","_class","_class2","_Component","_inheritsLoose","_this","_len","arguments","length","args","Array","_key","call","apply","concat","_initializerDefineProperty","_descriptor","_assertThisInitialized","_descriptor2","_descriptor3","_descriptor4","_descriptor5","_descriptor6","_descriptor7","_descriptor8","_descriptor9","_descriptor10","_descriptor11","_descriptor12","originalScale","Vec3","_rotationDirection","difficulty","rotationSpeed","_proto","prototype","onLoad","node","setScale","setRandomSpriteFrame","setRandomColor","setRandomRotationDirection","start","on","EventType","TOUCH_START","onBalloonClicked","update","deltaTime","rotateBalloon","rotateAngle","angle","playOneShot","audioSource","clip","event","applyElasticDeformation","animation","getComponent","Animation","once","FINISHED","onAnimationFinished","play","destroy","setNumber","number","spawnTime","label","string","toString","setUniqueScale","scale","targetScale","tween","to","easing","setRandomShowEffect","balloonParticle","active","spriteFrames","randomIndex","Math","floor","random","randomSpriteFrame","spriteComponent","spriteFrame","console","warn","getScaleSize","x","colors","randomColor","balloonSprite","color","_this2","y","set","getRandomScale","randomScaleValue","maxScale","minScale","adjustRotationSpeedByDifficultyConfig","minRotationSpeedMultiplier","maxRotationSpeedMultiplier","speedMultiplier","maxRotationSpeed","minRotationSpeed","Component","_applyDecoratedDescriptor","configurable","enumerable","writable","initializer","_RF","pop","DebugViewRuntimeControl","_single","strSingle","strComposite","strMisc","compositeModeToggleList","singleModeToggleList","miscModeToggleList","textComponentList","labelComponentList","textContentList","hideButtonLabel","_currentColorIndex","strColor","WHITE","BLACK","RED","GREEN","BLUE","canvas","parent","Canvas","error","uiTransform","UITransform","halfScreenWidth","width","halfScreenHeight","height","miscNode","getChildByName","buttonNode","instantiate","name","titleNode","i","newLabel","EnableAllCompositeModeButton","setPosition","labelComponent","Label","overflow","currentRow","newNode","singleModeToggle","textComponent","getComponentInChildren","RichText","Toggle","TOGGLE","toggleSingleMode","Button","CLICK","enableAllCompositeMode","changeColorButton","changeTextColor","HideButton","hideUI","compositeModeToggle","toggleComponent","isChecked","toggleLightingWithAlbedo","toggleCSMColoration","toggleCompositeMode","isTextMatched","textUI","textDescription","tempText","String","findIndex","search","substr","toggle","debugView","director","root","singleMode","enableCompositeMode","lightingWithAlbedo","csmLayerColoration","button","activeValue","difficultyConfig","kindergarten","numberRange","maxBalloons","rotationSpeedMultiplierRange","scoreIncrement","requiredScore","gameTime","gameModes","gameMode","sortOrder","primary","juniorHigh","highSchool","college","graduate","phd","GameController","Prefab","_dec9","_dec10","_dec11","_dec12","_dec13","_dec14","_dec15","_dec16","_dec17","_dec18","_dec19","_dec20","_dec21","_dec22","_dec23","_dec24","_dec25","_dec26","_dec27","_dec28","_dec29","_dec30","_dec31","_dec32","_dec33","_dec34","_dec35","_descriptor13","_descriptor14","_descriptor15","_descriptor16","_descriptor17","_descriptor18","_descriptor19","_descriptor20","_descriptor21","_descriptor22","_descriptor23","_descriptor24","_descriptor25","_descriptor26","_descriptor27","_descriptor28","_descriptor29","_descriptor30","_descriptor31","_descriptor32","currentLevelString","originLevelString","_descriptor33","_descriptor34","_descriptor35","_descriptor36","maxRadius","_descriptor37","_descriptor38","currentTime","sortedNumbers","generatedScales","nextIndex","levelChangeUIAnimation","flexibilityScore","originScore","numbersToSpawn","nextCorrectNumber","isGameOver","currentDifficultyLevel","levelChangeUI","menuUI","gameOverUI","playingGameUI","startGameButton","startGame","restartGameButton","restartGame","risenGameButton","setDifficulty","level","log","JSON","stringify","levelKeys","Object","keys","defaultDifficultyKey","showTargetScoreUI","targetScoreUI","targetScoreLabel","scheduleOnce","beginGame","totalTime","countDownLabel","selectRandomGameMode","scoreLabel","levelChangeLabel","schedule","updateTimer","spawnBalloons","gameModeOptions","sortOrderOptions","updateGameModeLabel","moveToNextLevel","currentIndex","indexOf","levelUpSound","resetGameState","showGameCompletionUI","modeDescription","gameModeLabel","updateGameMode","modes","selectedMode","includes","timeOverSound","unschedule","timeOverDingSound","gameOver","_this3","destroyAllBalloons","gameOverScoreLabel","currentLevelLabel","stop","updateGameOverUIScore","scoreNeededForNextLevel","soundClip","scoreSoundDown","scoreSoundUp","nextLevelInfoLabel","nextLevelInfoNumLabel","ganmeOverTitleLabel","levelUpVocalSound","restartSpawnBalloons","generateUniqueScale","uniqueScale","scaleRange","minAllowedDifference","some","abs","getRandomPosition","playAreaTransform","playArea","playAreaWidth","playAreaHeight","generateSortedRandomNumbers","count","numbers","Set","rangeStart","rangeEnd","size","num","add","from","sort","a","b","_this4","Date","now","forEach","balloon","balloonPrefab","addChild","push","balloonScript","checkBalloon","appearSound","clickedNumber","clickedScale","_this5","clickTime","elapsedTime","isCorrect","expectedScale","updateScore","correctSound","showCheckImage","wrongSound","_this6","gameOverScoreNumber","incrementStep","totalSteps","ceil","currentStep","intervalDuration","timer","setInterval","clearInterval","_this7","oldLevelName","timeAdjustedScoreIncrement","calculateTimeAdjustedScoreIncrement","scoreChange","timeThresholds","scorePenalties","max","extraTime","extraPenalty","min","handleLevelChangeFeedback","newLevelName","_this8","oldIndex","key","newIndex","levelDownSound","_this9","correctImage","wrongImage","children","slice"],"mappings":"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","file":"all.js","sourcesContent":["import { _decorator, AudioSource, Color, Component, LabelComponent, Node, SpriteComponent, Vec3, tween, AudioClip, SpriteFrame, Animation } from 'cc';\nconst { ccclass, property } = _decorator;\n\n@ccclass('Balloon')\nexport class Balloon extends Component {\n    @property\n    minScale: number = 1; // 最小缩放比例\n\n    @property\n    maxScale: number = 10; // 最大缩放比例\n\n    @property\n    minRotationSpeed: number = 10; //旋转速度\n\n    @property\n    maxRotationSpeed: number = 1000;\n\n    @property(Color)\n    colors: Color[] = [];\n\n    @property(LabelComponent)\n    label: LabelComponent = null;\n\n    @property(SpriteComponent)\n    balloonSprite: SpriteComponent = null;\n\n    @property([SpriteFrame])\n    public spriteFrames: SpriteFrame[] = [];\n\n    @property(AudioClip)\n    public clip: AudioClip = null!;\n\n    @property(AudioSource)\n    public audioSource: AudioSource = null!;\n\n    @property(Node)\n    public balloonParticle: Node = null;\n    @property\n    public spawnTime: number = 0; // 气球生成的时间戳\n    // 添加一个属性来存储原始的缩放比例\n    private originalScale: Vec3 = new Vec3();\n    _rotationDirection: number = 1; // 旋转方向，默认为正向\n\n    difficulty: number = 1; // 从 GameController 获取难度等级\n\n    rotationSpeed: number = 1; //\n    onLoad() {\n        this.node.setScale(0, 0); // 初始化时设置 scale 为 0\n        // 将组件赋到全局变量 _audioSource 中\n        //随机形状\n        this.setRandomSpriteFrame();\n        // 随机设置气球颜色\n        this.setRandomColor();\n        // 随机设置旋转方向\n        this.setRandomRotationDirection();\n        // 根据难度调整旋转速度\n\n\n    }\n\n    start() {\n        this.node.on(Node.EventType.TOUCH_START, this.onBalloonClicked, this);\n        // 添加鼠标悬浮事件监听：在 onLoad 方法中为气球节点添加鼠标悬浮和离开事件的监听器。\n    }\n\n    update(deltaTime: number) {\n        // 在每帧更新时调用\n        this.rotateBalloon(deltaTime);\n    }\n\n    rotateBalloon(deltaTime: number) {\n        // 根据旋转速度计算每帧需要旋转的角度，并考虑旋转方向\n        const rotateAngle = this.rotationSpeed * deltaTime * this._rotationDirection;\n        // 每帧绕 Z 轴旋转一定角度\n        this.node.angle += rotateAngle;\n    }\n\n    playOneShot() {\n        this.audioSource.playOneShot(this.clip, 1);\n    }\n\n    onBalloonClicked(event) {\n        this.playOneShot();\n        this.applyElasticDeformation();\n        // 播放爆炸动画\n        const animation = this.getComponent(Animation);\n        if (animation) {\n            // 确保动画组件存在\n            animation.once(Animation.EventType.FINISHED, this.onAnimationFinished, this); // 监听动画结束事件\n            animation.play('BalloonExplode'); // 播放爆炸动画\n        } else {\n            // 如果没有动画组件，直接销毁节点\n            this.node.destroy();\n        }\n    }\n    onAnimationFinished() {\n        // 动画播放完毕，销毁气球\n        this.node.destroy();\n    }\n    // 随机生成气球数字\n    setNumber(number: number, spawnTime) {\n        this.spawnTime = spawnTime; // 记录生成时间\n        if (this.label) {\n            this.label.string = number.toString();\n        }\n    }\n\n    setUniqueScale(scale: number) { // 设置随机大小\n        // 将单一的缩放值转换为Vec3\n        const targetScale = new Vec3(scale, scale, scale);\n        // 使用Tween动画平滑缩放到目标大小\n        tween(this.node)\n            .to(1, { scale: targetScale }, { easing: 'quartOut' }) // 缓慢增长到目标大小\n            .start(); // 开始执行Tween动画\n    }\n    setRandomShowEffect(scale: number) { // 设置随机显示例子\n        this.balloonParticle.active = false;\n    }\n    setRandomSpriteFrame() {\n        if (this.spriteFrames.length > 0) {\n            // 随机选择一个精灵帧\n            const randomIndex = Math.floor(Math.random() * this.spriteFrames.length);\n            const randomSpriteFrame = this.spriteFrames[randomIndex];\n            // 获取 SpriteComponent 并应用精灵帧\n            const spriteComponent = this.node.getComponent(SpriteComponent);\n            if (spriteComponent) {\n                spriteComponent.spriteFrame = randomSpriteFrame;\n            }\n        } else {\n            console.warn(\"No sprite frames defined in the spriteFrames array.\");\n        }\n    }\n    getScaleSize(): number {\n        // 假设x和y的缩放值相同，只返回其中一个即可\n\n        return this.node.scale.x;\n    }\n    setRandomColor() {\n        if (this.colors.length > 0) {\n            // 随机选择一个颜色索引\n            const randomIndex = Math.floor(Math.random() * this.colors.length);\n            const randomColor = this.colors[randomIndex];\n\n            // 应用颜色到气球精灵\n            if (this.balloonSprite) {\n                // console.log(\"应用颜色\", randomColor);\n                this.balloonSprite.color = randomColor;\n            }\n        } else {\n            console.warn(\"No colors defined in the colors array.\");\n        }\n    }\n\n    applyElasticDeformation() {\n        // 点击爆炸的时候 瞬间变大的效果动画\n        const targetScale = new Vec3(this.node.scale.x * 1.5, this.node.scale.y * 1.5, 1); // 比例增加10%\n        tween(this.node)\n            .to(0.1, { scale: targetScale }, { easing: 'quartOut' }) // 快速放大\n            .call(() => {\n                // 在缩小之前存储原始的缩放比例\n                this.originalScale.set(this.node.scale);\n            })\n            .to(0.1, { scale: this.originalScale }, { easing: 'quartOut' }) // 恢复到原始比例\n            .start();\n    }\n\n\n    getRandomScale() {\n        // 此方法应返回一个 Vec3 对象，代表随机的缩放比例\n        const randomScaleValue = Math.random() * (this.maxScale - this.minScale) + this.minScale;\n        // console.log(\"缩放比例\", randomScaleValue);\n        return new Vec3(randomScaleValue, randomScaleValue, 1); // 假设这是2D游戏，Z轴scale保持1\n    }\n\n    setRandomRotationDirection() {\n        // 随机选择旋转方向，1 代表正向，-1 代表反向\n        this._rotationDirection = Math.random() < 0.5 ? 1 : -1;\n        // console.log(\"旋转方向\", this._rotationDirection);\n    }\n\n    adjustRotationSpeedByDifficultyConfig(minRotationSpeedMultiplier, maxRotationSpeedMultiplier) {\n        // 首先，根据提供的最小和最大倍数计算一个随机的速度倍数\n        const speedMultiplier = Math.random() * (maxRotationSpeedMultiplier - minRotationSpeedMultiplier) + minRotationSpeedMultiplier;\n\n        // 然后，计算实际的旋转速度\n        // 假设 this.minRotationSpeed 和 this.maxRotationSpeed 定义了气球的基础旋转速度范围\n        // 我们将基础速度（基于最小和最大速度的随机值）乘以计算出的速度倍数，以获得最终旋转速度\n        this.rotationSpeed = Math.random() * (this.maxRotationSpeed - this.minRotationSpeed) + this.minRotationSpeed;\n        this.rotationSpeed *= speedMultiplier;\n    }\n\n\n}\n","import { Color, Canvas, UITransform, instantiate, math, Toggle, TextureCube, _decorator, Component, Button, labelAssembler, game, director, Node, Scene, renderer, CameraComponent, Label, ForwardPipeline, RichText } from 'cc';\nconst { ccclass, property } = _decorator;\n\n@ccclass('internal.DebugViewRuntimeControl')\nexport class DebugViewRuntimeControl extends Component {\n    @property(Node)\n    compositeModeToggle: Node | null = null;\n    @property(Node)\n    singleModeToggle: Node | null = null;\n    @property(Node)\n    EnableAllCompositeModeButton: Node | null = null;\n\t_single: number = 0;\n\n    private strSingle: string[] = [\n        'No Single Debug',\n        'Vertex Color',\n        'Vertex Normal',\n        'Vertex Tangent',\n        'World Position',\n        'Vertex Mirror',\n        'Face Side',\n        'UV0',\n        'UV1',\n        'UV Lightmap',\n        'Project Depth',\n        'Linear Depth',\n\n        'Fragment Normal',\n        'Fragment Tangent',\n        'Fragment Binormal',\n        'Base Color',\n        'Diffuse Color',\n        'Specular Color',\n        'Transparency',\n        'Metallic',\n        'Roughness',\n        'Specular Intensity',\n        'IOR',\n\n        'Direct Diffuse',\n        'Direct Specular',\n        'Direct All',\n        'Env Diffuse',\n        'Env Specular',\n        'Env All',\n        'Emissive',\n        'Light Map',\n        'Shadow',\n        'AO',\n\n        'Fresnel',\n        'Direct Transmit Diffuse',\n        'Direct Transmit Specular',\n        'Env Transmit Diffuse',\n        'Env Transmit Specular',\n        'Transmit All',\n        'Direct Internal Specular',\n        'Env Internal Specular',\n        'Internal All',\n\n        'Fog',\n    ];\n    private strComposite: string[] = [\n        'Direct Diffuse',\n        'Direct Specular',\n        'Env Diffuse',\n        'Env Specular',\n        'Emissive',\n        'Light Map',\n        'Shadow',\n        'AO',\n\n        'Normal Map',\n        'Fog',\n\n        'Tone Mapping',\n        'Gamma Correction',\n\n        'Fresnel',\n        'Transmit Diffuse',\n        'Transmit Specular',\n        'Internal Specular',\n        'TT',\n    ];\n    private strMisc: string[] = [\n        'CSM Layer Coloration',\n        'Lighting With Albedo',\n    ];\n\n    private compositeModeToggleList: Node[] = [];\n    private singleModeToggleList: Node[] = [];\n    private miscModeToggleList: Node[] = [];\n    private textComponentList: RichText[] = [];\n    private labelComponentList: Label[] = [];\n    private textContentList: string[] = [];\n    private hideButtonLabel: Label;\n    start() {\n        // get canvas resolution\n        const canvas = this.node.parent.getComponent(Canvas);\n        if (!canvas) {\n            console.error('debug-view-runtime-control should be child of Canvas');\n            return;\n        }\n\n        const uiTransform = this.node.parent.getComponent(UITransform);\n        const halfScreenWidth = uiTransform.width * 0.5;\n        const halfScreenHeight = uiTransform.height * 0.5;\n\n        let x = -halfScreenWidth + halfScreenWidth * 0.1, y = halfScreenHeight - halfScreenHeight * 0.1;\n        const width = 200, height = 20;\n\n        // new nodes\n        const miscNode = this.node.getChildByName('MiscMode');\n        const buttonNode = instantiate(miscNode);\n        buttonNode.parent = this.node;\n        buttonNode.name = 'Buttons';\n        const titleNode = instantiate(miscNode);\n        titleNode.parent = this.node;\n        titleNode.name = 'Titles';\n\n        // title\n        for (let i = 0; i < 2; i++) {\n            const newLabel = instantiate(this.EnableAllCompositeModeButton.getChildByName('Label'));\n            newLabel.setPosition(x + (i > 0 ? 50 + width * 2 : 150), y, 0.0);\n            newLabel.setScale(0.75, 0.75, 0.75);\n            newLabel.parent = titleNode;\n            const labelComponent = newLabel.getComponent(Label);\n            labelComponent.string = i ? '----------Composite Mode----------' : '----------Single Mode----------';\n            labelComponent.color = Color.WHITE;\n            labelComponent.overflow = 0;\n            this.labelComponentList[this.labelComponentList.length] = labelComponent;\n        }\n\n        y -= height;\n        // single\n        let currentRow = 0;\n        for (let i = 0; i < this.strSingle.length; i++, currentRow++) {\n            if (i === this.strSingle.length >> 1) {\n                x += width;\n                currentRow = 0;\n            }\n            const newNode = i ? instantiate(this.singleModeToggle) : this.singleModeToggle;\n            newNode.setPosition(x, y - height * currentRow, 0.0);\n            newNode.setScale(0.5, 0.5, 0.5);\n            newNode.parent = this.singleModeToggle.parent;\n\n            const textComponent = newNode.getComponentInChildren(RichText);\n            textComponent.string = this.strSingle[i];\n            this.textComponentList[this.textComponentList.length] = textComponent;\n            this.textContentList[this.textContentList.length] = textComponent.string;\n\n            newNode.on(Toggle.EventType.TOGGLE, this.toggleSingleMode, this);\n\n            this.singleModeToggleList[i] = newNode;\n        }\n\n        x += width;\n        // buttons\n        this.EnableAllCompositeModeButton.setPosition(x + 15, y, 0.0);\n        this.EnableAllCompositeModeButton.setScale(0.5, 0.5, 0.5);\n        this.EnableAllCompositeModeButton.on(Button.EventType.CLICK, this.enableAllCompositeMode, this);\n        this.EnableAllCompositeModeButton.parent = buttonNode;\n        let labelComponent = this.EnableAllCompositeModeButton.getComponentInChildren(Label);\n        this.labelComponentList[this.labelComponentList.length] = labelComponent;\n\n        const changeColorButton = instantiate(this.EnableAllCompositeModeButton);\n        changeColorButton.setPosition(x + 90, y, 0.0);\n        changeColorButton.setScale(0.5, 0.5, 0.5);\n        changeColorButton.on(Button.EventType.CLICK, this.changeTextColor, this);\n        changeColorButton.parent = buttonNode;\n        labelComponent = changeColorButton.getComponentInChildren(Label);\n        labelComponent.string = 'TextColor';\n        this.labelComponentList[this.labelComponentList.length] = labelComponent;\n\n        const HideButton = instantiate(this.EnableAllCompositeModeButton);\n        HideButton.setPosition(x + 200, y, 0.0);\n        HideButton.setScale(0.5, 0.5, 0.5);\n        HideButton.on(Button.EventType.CLICK, this.hideUI, this);\n        HideButton.parent = this.node.parent;\n        labelComponent = HideButton.getComponentInChildren(Label);\n        labelComponent.string = 'Hide UI';\n        this.labelComponentList[this.labelComponentList.length] = labelComponent;\n        this.hideButtonLabel = labelComponent;\n\n        // misc\n        y -= 40;\n        for (let i = 0; i < this.strMisc.length; i++) {\n            const newNode = instantiate(this.compositeModeToggle);\n            newNode.setPosition(x, y - height * i, 0.0);\n            newNode.setScale(0.5, 0.5, 0.5);\n            newNode.parent = miscNode;\n\n            const textComponent = newNode.getComponentInChildren(RichText);\n            textComponent.string = this.strMisc[i];\n            this.textComponentList[this.textComponentList.length] = textComponent;\n            this.textContentList[this.textContentList.length] = textComponent.string;\n\n            const toggleComponent = newNode.getComponent(Toggle);\n            toggleComponent.isChecked = i ? true : false;\n            newNode.on(Toggle.EventType.TOGGLE, i ? this.toggleLightingWithAlbedo : this.toggleCSMColoration, this);\n            this.miscModeToggleList[i] = newNode;\n        }\n\n        // composite\n        y -= 150;\n        for (let i = 0; i < this.strComposite.length; i++) {\n            const newNode = i ? instantiate(this.compositeModeToggle) : this.compositeModeToggle;\n            newNode.setPosition(x, y - height * i, 0.0);\n            newNode.setScale(0.5, 0.5, 0.5);\n            newNode.parent = this.compositeModeToggle.parent;\n\n            const textComponent = newNode.getComponentInChildren(RichText);\n            textComponent.string = this.strComposite[i];\n            this.textComponentList[this.textComponentList.length] = textComponent;\n            this.textContentList[this.textContentList.length] = textComponent.string;\n\n            newNode.on(Toggle.EventType.TOGGLE, this.toggleCompositeMode, this);\n\n            this.compositeModeToggleList[i] = newNode;\n        }\n    }\n\n    isTextMatched(textUI, textDescription) : boolean {\n        let tempText = new String(textUI);\n        const findIndex = tempText.search('>');\n        if (findIndex === -1) {\n            return textUI === textDescription;\n        } else {\n            tempText = tempText.substr(findIndex + 1);\n            tempText = tempText.substr(0, tempText.search('<'));\n            return tempText === textDescription;\n        }\n    }\n    toggleSingleMode(toggle: Toggle) {\n        const debugView = director.root!.debugView;\n        const textComponent = toggle.getComponentInChildren(RichText);\n        for (let i = 0; i < this.strSingle.length; i++) {\n            if (this.isTextMatched(textComponent.string, this.strSingle[i])) {\n                debugView.singleMode = i;\n            }\n        }\n    }\n    toggleCompositeMode(toggle: Toggle) {\n        const debugView = director.root!.debugView;\n        const textComponent = toggle.getComponentInChildren(RichText);\n        for (let i = 0; i < this.strComposite.length; i++) {\n            if (this.isTextMatched(textComponent.string, this.strComposite[i])) {\n                debugView.enableCompositeMode(i, toggle.isChecked);\n            }\n        }\n    }\n    toggleLightingWithAlbedo(toggle: Toggle) {\n        const debugView = director.root!.debugView;\n        debugView.lightingWithAlbedo = toggle.isChecked;\n    }\n    toggleCSMColoration(toggle: Toggle) {\n        const debugView = director.root!.debugView;\n        debugView.csmLayerColoration = toggle.isChecked;\n    }\n    enableAllCompositeMode(button: Button) {\n        const debugView = director.root!.debugView;\n        debugView.enableAllCompositeMode(true);\n        for (let i = 0; i < this.compositeModeToggleList.length; i++) {\n            const toggleComponent = this.compositeModeToggleList[i].getComponent(Toggle);\n            toggleComponent.isChecked = true;\n        }\n\n        let toggleComponent = this.miscModeToggleList[0].getComponent(Toggle);\n        toggleComponent.isChecked = false;\n        debugView.csmLayerColoration = false;\n        toggleComponent = this.miscModeToggleList[1].getComponent(Toggle);\n        toggleComponent.isChecked = true;\n        debugView.lightingWithAlbedo = true;\n    }\n    hideUI(button: Button) {\n        const titleNode = this.node.getChildByName('Titles');\n        const activeValue = !titleNode.active;\n        this.singleModeToggleList[0].parent.active = activeValue;\n        this.miscModeToggleList[0].parent.active = activeValue;\n        this.compositeModeToggleList[0].parent.active = activeValue;\n        this.EnableAllCompositeModeButton.parent.active = activeValue;\n        titleNode.active = activeValue;\n        this.hideButtonLabel.string = activeValue ? 'Hide UI' : 'Show UI';\n    }\n\n    private _currentColorIndex = 0;\n    private strColor: string[] = [\n        '<color=#ffffff>',\n        '<color=#000000>',\n        '<color=#ff0000>',\n        '<color=#00ff00>',\n        '<color=#0000ff>',\n    ];\n    private color: Color[] = [\n        Color.WHITE,\n        Color.BLACK,\n        Color.RED,\n        Color.GREEN,\n        Color.BLUE,\n    ];\n    changeTextColor(button: Button) {\n        this._currentColorIndex++;\n        if (this._currentColorIndex >= this.strColor.length) {\n            this._currentColorIndex = 0;\n        }\n        for (let i = 0; i < this.textComponentList.length; i++) {\n            this.textComponentList[i].string = this.strColor[this._currentColorIndex] + this.textContentList[i] + '</color>';\n        }\n        for (let i = 0; i < this.labelComponentList.length; i++) {\n            this.labelComponentList[i].color = this.color[this._currentColorIndex];\n        }\n    }\n\n    onLoad() {\n    }\n    update(deltaTime: number) {\n    }\n}\n","// DifficultyConfig.ts 难度系统\nexport type DifficultyLevel = {\n    name: string; // 难度的中文名称\n    numberRange: [number, number]; // 出现气球的数字范围\n    maxBalloons: number; // 最大气球量\n    rotationSpeedMultiplierRange: [number, number]; //气球旋转速度\n    scoreIncrement: number; //每次得分数\n    requiredScore: number; // 通关所需分数\n    gameTime: number; // 游戏时间（秒）\n    gameModes: { gameMode: string[]; sortOrder: string[] }; // 游戏模式和排序顺序\n};\n\nexport const difficultyConfig: {[level: string]: DifficultyLevel} = {\n    kindergarten: {\n        name: \"幼儿\",\n        numberRange: [1, 10],\n        maxBalloons: 3,\n        rotationSpeedMultiplierRange: [1,1.2],\n        scoreIncrement: 6,    // \n        requiredScore: 50 , // \n        gameTime: 15, // \n        gameModes: {\n            gameMode: ['NUM'],\n            sortOrder: ['ASC']\n        }\n    },\n    primary: {\n        name: \"小学\",\n        numberRange: [1, 20],\n        maxBalloons: 3,\n        rotationSpeedMultiplierRange:[1, 1.5],\n        scoreIncrement: 7, //21\n        requiredScore: 70 , // 示例值\n        gameTime: 15, // 示例值\n        gameModes: {\n            gameMode: ['NUM'],\n            sortOrder: ['ASC','DESC']\n        }\n    },\n    juniorHigh: {\n        name: \"初中\",\n        numberRange: [1, 10],\n        maxBalloons: 4,\n        rotationSpeedMultiplierRange: [1,2],\n        scoreIncrement: 8, //32\n        requiredScore: 80 , // 示例值\n        gameTime: 30, // 示例值\n        gameModes: {\n            gameMode: ['SIZE','NUM'],\n            sortOrder: ['ASC']\n        }\n    },\n    highSchool: {\n        name: \"高中\",\n        numberRange: [-10, 10],\n        maxBalloons: 5,\n        rotationSpeedMultiplierRange: [1,2.5],\n        scoreIncrement: 8, //45\n        requiredScore: 100 , // 示例值\n        gameTime: 30, // 示例值\n        gameModes: {\n            gameMode: ['SIZE','NUM'],\n            sortOrder: ['ASC', 'DESC']\n        }\n    },\n    college: {\n        name: \"大学\",\n        numberRange: [-20, 20],\n        maxBalloons: 4,\n        rotationSpeedMultiplierRange: [1,2.5],\n        scoreIncrement: 9, //\n        requiredScore: 120 , // 示例值\n        gameTime: 35, // 示例值\n        gameModes: {\n            gameMode: ['SIZE','NUM'],\n            sortOrder: ['ASC', 'DESC']\n        }\n    },\n    graduate: {\n        name: \"研究生\",\n        numberRange: [-30, 50], // 这里可能需要调整\n        maxBalloons: 5,\n        rotationSpeedMultiplierRange: [2,3],\n        scoreIncrement: 9,\n        requiredScore: 150 , // 示例值\n        gameTime: 50, // 示例值\n        gameModes: {\n            gameMode: ['NUM', 'SIZE'],\n            sortOrder: ['ASC', 'DESC']\n        }\n        // 由于研究生难度中包含分数，可能还需要其他属性来支持\n    },\n    phd: {\n        name: \"博士\",\n        numberRange: [-99, 99],\n        maxBalloons: 5,\n        rotationSpeedMultiplierRange: [2,3],\n        scoreIncrement: 10,\n        requiredScore: 200 , // 示例值\n        gameTime: 50, // 示例值\n        gameModes: {\n            gameMode: ['NUM', 'SIZE'],\n            sortOrder: ['ASC', 'DESC']\n        }\n        // 与研究生类似，考虑到都是分数，可能需要其他属性\n    },\n};","import { _decorator, Component, Node, Prefab, instantiate, Vec3, UITransform, AudioSource, AudioClip, Animation, Label, Button } from 'cc';\nimport { Balloon } from './Balloon';\nimport { DifficultyLevel, difficultyConfig } from './DifficultyConfig';\nconst { ccclass, property } = _decorator;\n\n@ccclass('GameController')\nexport class GameController extends Component {\n    @property(Prefab)\n    balloonPrefab: Prefab = null; // 气球的 Prefab\n\n    @property(Node)\n    playArea: Node = null; // 游戏区域节点\n    @property(AudioSource)\n    audioSource: AudioSource = null; // 用于播放一次性音效的AudioSource\n\n    @property(AudioClip)       // 播放正确的音效\n    correctSound: AudioClip = null;\n\n    @property(AudioClip)      // 播放错误的音效\n    wrongSound: AudioClip = null;\n\n    @property(AudioClip)\n    appearSound: AudioClip = null;  //气球出现的音效\n\n    @property(AudioClip)      // 播放得分音效\n    scoreSoundUp: AudioClip = null;\n\n    @property(AudioClip)      // 播放失分音效\n    scoreSoundDown: AudioClip = null;\n\n    @property(AudioClip)      // 播放倒计时音效\n    timeOverSound: AudioClip = null;\n\n    @property(AudioClip)      // 播放倒计时叮音效\n    timeOverDingSound: AudioClip = null;\n    @property(AudioClip)      // 播放得分看板总结后叮音效\n    bilingDingSound: AudioClip = null;\n    @property(Node)     //gameOverUI\n    gameOverUI: Node = null;\n    @property(Node) //\n    targetScoreUI: Node = null;\n    @property(Node)     //GameUI\n    playingGameUI: Node = null;\n\n    @property(Node)     //MenuUI\n    menuUI: Node = null;\n    @property(AudioClip)\n    levelUpSound: AudioClip = null; // 等级提升音效\n    @property(AudioClip)\n    levelUpVocalSound: AudioClip = null; // 等级提升女生音效\n    @property(AudioClip)\n    levelDownSound: AudioClip = null; // 等级降低音效\n\n    @property(Label)\n    levelChangeLabel: Label = null; // 显示等级变化的文本Label\n    @property(Label)\n    nextLevelInfoLabel: Label = null; // 显示距离下一关还需多少分的Label\n    @property(Label)\n    ganmeOverTitleLabel: Label = null; // 游戏闯关结束结算的时候展示的文本  \n    @property(Label)\n    nextLevelInfoNumLabel: Label = null; // 显示距离下一关还需多少分的Num Label\n    @property(Label)\n    targetScoreLabel: Label = null; // 显示通关所需下一关还需多少分的Num Label\n    @property(Node)\n    levelChangeUI: Node = null;//\n\n    @property(Node)     //点击正确的图片\n    correctImage: Node = null;\n\n    @property(Node)    //点击错误的图片\n    wrongImage: Node = null;\n\n    @property(Button)    //开始游戏按钮\n    startGameButton: Button = null;\n\n    @property(Button)    //重新开始游戏按钮\n    restartGameButton: Button = null;\n\n    @property(Button)    //复活游戏按钮\n    risenGameButton: Button = null;\n\n    @property(Label)   //倒计时秒数文本\n    countDownLabel: Label | null = null;\n\n    @property(Label)   //当前得分文本\n    scoreLabel: Label | null = null;\n    @property(Label)   //最终段位文本\n    currentLevelLabel: Label | null = null;\n\n    currentLevelString: string | null = null;\n    originLevelString: string | null = null;\n    @property(Label)   //游戏结算得分文本\n    gameOverScoreLabel: Label | null = null;\n    @property(Label)\n    gameModeLabel: Label = null; // 游戏模式/题目标签\n\n    private gameMode: string = 'NUM'; // 默认为从小到大模式\n    private sortOrder: string = 'ASC'; // 默认为从小到大模式\n\n\n    // @property\n    maxBalloons: number = 5; // 最大气球数量\n    @property\n    minScale: number = 1; // 最小缩放比例\n\n    @property\n    maxScale: number = 10; // 最大缩放比例\n    // @property\n    maxRadius: number = 0.1;//气球最大半径 用于计算生成气球的坐标要在游戏区域里\n    @property\n    totalTime: number = 30; // 游戏时间时间\n\n    @property\n    defaultDifficultyKey: string = 'kindergarten'; // 默认游戏难度\n\n    private currentTime: number = 0; // 当前花费时间\n    private sortedNumbers: number[] = []; // 存储生成的随机数字数组\n    // 存储已生成气球大小的列表\n    private generatedScales: number[] = [];\n    private nextIndex: number = 0; // 索引，用于跟踪下一个正确的数字\n    private levelChangeUIAnimation: Animation = null; //\n    flexibilityScore: number = 0; // 玩家的灵活度得分\n    originScore: number = 0; //\n    numbersToSpawn: number[] = []; // 存储将要生成的数字\n    nextCorrectNumber = null; // 下一个正确的数字\n    isGameOver = false; // 游戏是否结束\n    private currentDifficultyLevel: DifficultyLevel; // 当前难度级别\n    start() {\n        this.levelChangeUIAnimation = this.levelChangeUI.getComponent(Animation);\n        this.menuUI.active = true;\n        this.gameOverUI.active = false;\n        this.playingGameUI.active = false;\n        this.startGameButton.node.on(Node.EventType.TOUCH_START, this.startGame, this);\n        this.restartGameButton.node.on(Node.EventType.TOUCH_START, this.restartGame, this);\n        this.risenGameButton.node.on(Node.EventType.TOUCH_START, this.startGame, this);\n    }\n    setDifficulty(level: string) {\n        this.currentDifficultyLevel = difficultyConfig[level];\n        console.log(this.currentDifficultyLevel, JSON.stringify(this.currentDifficultyLevel));\n        this.maxBalloons = this.currentDifficultyLevel.maxBalloons;\n        console.log(\"当前游戏level\", JSON.stringify(this.currentDifficultyLevel))\n    }\n    restartGame() {\n        const levelKeys = Object.keys(difficultyConfig);\n        this.defaultDifficultyKey = levelKeys[0];\n        console.log(\"restartGame defaultDifficultyKey=\", this.defaultDifficultyKey)\n        this.startGame()\n    }\n\n    startGame() {\n        // 设置默认难度级别\n        this.setDifficulty(this.defaultDifficultyKey);\n        this.menuUI.active = false;\n        this.playingGameUI.active = true\n        this.gameOverUI.active = false; // 确保开始游戏时隐藏游戏结束UI\n        this.showTargetScoreUI();\n\n    }\n    showTargetScoreUI() {\n        this.targetScoreUI.active = true;\n        this.targetScoreLabel.string = this.currentDifficultyLevel.requiredScore.toString()\n        this.scheduleOnce(() => {\n          this.beginGame();\n        }, 3); // 给用户一点时间看提示图片\n    }\n    beginGame() {\n        this.targetScoreUI.active = false;\n        this.audioSource.play();\n        this.currentTime = this.totalTime;\n        // 从当前难度级别配置中读取游戏时间和模式\n        this.currentTime = this.currentDifficultyLevel.gameTime;\n        this.countDownLabel.string = this.currentTime.toString();\n        this.selectRandomGameMode()\n        this.flexibilityScore = 0\n        this.scoreLabel.string = this.flexibilityScore.toString();\n        this.currentLevelString = difficultyConfig[this.defaultDifficultyKey].name\n        this.levelChangeLabel.string = this.currentLevelString;\n        this.schedule(this.updateTimer, 1);\n        // 随机选择游戏模式并更新题目\n        // this.updateGameMode();\n        this.spawnBalloons();\n    }\n    selectRandomGameMode() {\n        // 设置默认游戏模式（可根据需求调整）\n        // 从当前难度级别的配置中随机选择游戏模式和排序方式\n        const gameModeOptions = this.currentDifficultyLevel.gameModes.gameMode;\n        const sortOrderOptions = this.currentDifficultyLevel.gameModes.sortOrder;\n        this.gameMode = gameModeOptions[Math.floor(Math.random() * gameModeOptions.length)];\n        this.sortOrder = sortOrderOptions[Math.floor(Math.random() * sortOrderOptions.length)];\n        // 更新游戏模式描述\n        this.updateGameModeLabel();\n    }\n    // 假设的 moveToNextLevel 方法，用于更新到下一个难度级别\n    moveToNextLevel() {\n        const levelKeys = Object.keys(difficultyConfig);\n        const currentIndex = levelKeys.indexOf(this.defaultDifficultyKey);\n        const nextIndex = currentIndex + 1;\n        if (nextIndex < levelKeys.length) {\n\n            // 存在下一个难度级别，更新难度并重新开始游戏\n            this.defaultDifficultyKey = levelKeys[nextIndex];\n            console.log(\"更新到下一个难度级别\", this.defaultDifficultyKey)\n            this.setDifficulty(this.defaultDifficultyKey);\n            // 重置游戏状态以准备新的难度级别\n\n            // 自动开始新难度级别的游戏\n\n            // 隐藏GameOverUI并开始下一关\n            this.audioSource.playOneShot(this.levelUpSound, 1); // 播放升级音效\n            this.resetGameState();\n            this.startGame();\n\n\n        } else {\n            // 玩家通关了所有的难度级别，展示游戏通关逻辑\n            console.log(\"恭喜你完成了所有难度级别！\");\n            // 可以在这里处理游戏通关的逻辑，例如展示一个通关的界面\n            this.showGameCompletionUI();\n        }\n    }\n    showGameCompletionUI() {\n        // 展示游戏通关界面的逻辑\n        // 例如，使游戏通关的UI元素可见\n        // this.gameCompletionUI.active = true; // 假设你有一个游戏通关的UI节点命名为gameCompletionUI\n\n        // 可以在这里播放通关音效\n        // this.audioSource.playOneShot(this.gameCompletionSound, 1);\n\n        // 可能还想要展示一些通关的信息，比如玩家的总分数、用时等\n        // this.finalScoreLabel.string = `总分数: ${this.flexibilityScore}`; // 假设你有一个显示总分数的Label命名为finalScoreLabel\n    }\n\n    resetGameState() {\n        // 重置游戏状态的逻辑\n        // 重置分数、计时器等\n        this.flexibilityScore = 0;\n        this.scoreLabel.string = '0';\n        // 重置其他需要的游戏状态和变量...\n    }\n    updateGameModeLabel() {\n        let modeDescription = \"\"; // 游戏模式的描述\n\n        if (this.gameMode === 'NUM') {\n            modeDescription += \"数字\";\n        } else if (this.gameMode === 'SIZE') {\n            modeDescription += \"气球\";\n        }\n        modeDescription += this.sortOrder === 'ASC' ? \"从小到大点击\" : \"从大到小点击\";\n        this.gameModeLabel.string = modeDescription;\n\n    }\n    updateGameMode() {\n        const modes = [\"数字从小到大点击\", \"数字从大到小点击\", \"气球从小到大点击\", \"气球从大到小点击\"];\n        const selectedMode = modes[Math.floor(Math.random() * modes.length)];\n        this.gameModeLabel.string = selectedMode;\n\n        // 初始化gameMode和sortOrder\n        let gameMode = 'NUM'; // 默认为数字模式\n        let sortOrder = 'ASC'; // 默认为升序\n        // 解析选择的模式，设置gameMode和sortOrder\n        if (selectedMode.includes(\"气球\")) {\n            gameMode = 'SIZE'; // 设置为基于大小的模式\n        }\n        if (selectedMode.includes(\"大到小\")) {\n            sortOrder = 'DESC'; // 设置为降序\n        }\n\n        // 更新属性\n        this.gameMode = gameMode;\n        this.sortOrder = sortOrder;\n        // 反馈给开发者或测试者看到的更新\n        console.log(`游戏模式${selectedMode}`);\n    }\n    updateTimer() {\n        this.currentTime -= 1;\n        if (this.currentTime <= 10 && this.currentTime > 0) {//倒计时音乐\n            if (this.audioSource && this.timeOverSound) {\n                this.audioSource.playOneShot(this.timeOverSound, 1); // 播放倒计时音效\n            }\n        }\n        if (this.countDownLabel) {  //倒计时秒针数字\n            this.countDownLabel.string = this.currentTime.toString();\n        }\n        if (this.currentTime <= 0) {\n            this.unschedule(this.updateTimer);\n            if (this.audioSource && this.timeOverDingSound) {\n                this.audioSource.playOneShot(this.timeOverDingSound, 1); // 播放倒计时叮音效\n            }\n            this.gameOver();\n        }\n\n    }\n    gameOver() {\n        console.log(\"game over\");\n        this.destroyAllBalloons(); // 销毁所有气球\n        this.isGameOver = true\n        this.playingGameUI.active = false\n        this.gameOverUI.active = true;\n        this.gameOverScoreLabel.string = this.originScore.toString();\n        // console.log(\"currentLevelString\", this.currentLevelString);\n        this.currentLevelLabel.string = this.currentLevelString;\n        this.audioSource.stop();\n        this.scheduleOnce(() => {\n            this.updateGameOverUIScore();\n        }, 0.5); // 给用户一点时间看提示图片\n        if (this.audioSource && this.timeOverDingSound) {\n            this.audioSource.playOneShot(this.timeOverDingSound, 1); // 播放倒计时结束音效\n        }\n\n        let scoreNeededForNextLevel = this.currentDifficultyLevel.requiredScore - this.flexibilityScore;\n        if (scoreNeededForNextLevel > 0) {\n            const soundClip = this.scoreSoundDown;\n            if (soundClip) {\n                this.audioSource.playOneShot(this.scoreSoundUp, 0.3); // 播放正确或错误的音效\n            }\n            this.restartGameButton.node.active = true; // 使重新开始游戏按钮不可见\n            this.risenGameButton.node.active = true; // 使复活按钮不可见\n            this.nextLevelInfoLabel.node.active = true; // 可选：隐藏显示距离下一关还需多少分的标签\n            this.nextLevelInfoNumLabel.node.active = true; // 同上\n\n            // 玩家未能成功通关\n            this.ganmeOverTitleLabel.string = \"闯关失败\";\n            this.nextLevelInfoLabel.string = \"距离下一级还需\";\n\n            this.nextLevelInfoNumLabel.string = scoreNeededForNextLevel.toString();\n\n        } else {\n            this.restartGameButton.node.active = false; // 使重新开始游戏按钮不可见\n            this.risenGameButton.node.active = false; // 使复活按钮不可见\n            this.nextLevelInfoLabel.node.active = false; // 可选：隐藏显示距离下一关还需多少分的标签\n            this.nextLevelInfoNumLabel.node.active = false; // 同上\n\n            // 短暂展示结算界面后，播放升级音效，并自动升级难度\n            this.scheduleOnce(() => {\n                this.moveToNextLevel(); // 自动升级到下一关\n            }, 3); // 这里的3秒是展示结算界面的时间，可根据需要调整\n            // 如果玩家分数超过了通关分数，可以选择隐藏这个Label或者显示一个积极的消息\n            this.ganmeOverTitleLabel.string = \"闯关成功\"\n            this.scheduleOnce(() => {\n                // const animation = this.gameOverUI.getComponent(Animation);\n                // if (animation) {\n                //     animation.play('GameOverUILeave');\n                // }\n                this.audioSource.playOneShot(this.levelUpVocalSound, 1); // 播放正确或错误的音效\n\n            }, 4); // 给用户一点时间看提示图片 \n            // 播放数字变大的动画\n\n        }\n\n    }\n    restartSpawnBalloons() {\n        // 重新生成气球\n        this.destroyAllBalloons(); // 销毁所有气球\n        this.nextIndex = 0;\n        this.selectRandomGameMode()\n        this.spawnBalloons();\n        // 可能还需要重置其他相关状态，比如灵活度得分等\n    }\n    generateUniqueScale() { // 生成一个在minScale和maxScale之间的唯一缩放值：\n        let uniqueScale;\n        const scaleRange = this.maxScale - this.minScale;\n        const minAllowedDifference = 0.1; // 设定最小区别值以确保大小可辨识\n        do {\n            uniqueScale = Math.random() * scaleRange + this.minScale;\n            // 保证生成的大小是唯一且可辨识的\n        } while (this.generatedScales.some(scale => Math.abs(scale - uniqueScale) < minAllowedDifference));\n\n        return uniqueScale;\n    }\n    getRandomPosition(): Vec3 {\n        const playAreaTransform = this.playArea.getComponent(UITransform);\n        if (!playAreaTransform) {\n            console.error(\"playArea lacks a UITransformComponent!\");\n            return new Vec3(0, 0, 0);\n        }\n        const playAreaWidth = playAreaTransform.width;\n        const playAreaHeight = playAreaTransform.height;\n\n        // 为了确保气球不会超出PlayArea，需要考虑气球的maxRadius\n        // 生成随机位置时，考虑到maxRadius确保气球完全在PlayArea内\n        const x = (Math.random() * (playAreaWidth - this.maxRadius * 2)) + this.maxRadius - playAreaWidth / 2;\n        const y = (Math.random() * (playAreaHeight - this.maxRadius * 2)) + this.maxRadius - playAreaHeight / 2;\n\n        return new Vec3(x, y, 0);\n    }\n\n    generateSortedRandomNumbers(count: number): number[] {\n        // 生成气球数组\n        let numbers = new Set<number>();\n        const { numberRange } = this.currentDifficultyLevel;\n        const [rangeStart, rangeEnd] = numberRange;\n\n        while (numbers.size < count) {\n            let num = Math.floor(Math.random() * (rangeEnd - rangeStart + 1)) + rangeStart;\n            numbers.add(num);\n        }\n\n        return Array.from(numbers).sort((a, b) => a - b);\n    }\n    spawnBalloons() {// 气球生成\n\n        this.destroyAllBalloons(); // 销毁所有气球\n        this.sortedNumbers = this.generateSortedRandomNumbers(this.maxBalloons); // 示例：生成5个数字，难度为4\n\n        this.generatedScales = []; // 重置已生成的缩放大小列表\n        const { rotationSpeedMultiplierRange } = this.currentDifficultyLevel;\n        const [minRotationSpeedMultiplier, maxRotationSpeedMultiplier] = rotationSpeedMultiplierRange;\n        const spawnTime = Date.now(); // 获取当前时间戳\n        this.sortedNumbers.forEach(number => {\n            const balloon = instantiate(this.balloonPrefab);\n            this.playArea.addChild(balloon);\n            const uniqueScale = this.generateUniqueScale();\n\n            this.generatedScales.push(uniqueScale);\n            // console.log(`数字${number}的气球大小`, uniqueScale)\n            balloon.setPosition(this.getRandomPosition());\n            // 设置气球数字\n            const balloonScript = balloon.getComponent(Balloon);\n            if (balloonScript) {\n                balloonScript.setUniqueScale(uniqueScale); // // 调用修改后的方法，并传递生成的唯一大小\n                balloonScript.setNumber(number, spawnTime);// 传入数字以及生成时间\n                // 根据当前游戏难度调整旋转速度\n                balloonScript.adjustRotationSpeedByDifficultyConfig(minRotationSpeedMultiplier, maxRotationSpeedMultiplier);\n            }\n\n            balloon.on(Node.EventType.TOUCH_START, () => this.checkBalloon(number, uniqueScale, balloonScript.spawnTime), this);\n        });\n        if (this.audioSource && this.appearSound) {\n            this.audioSource.playOneShot(this.appearSound, 1); // 播放出现音效\n        }\n        this.generatedScales = Array.from(this.generatedScales).sort((a, b) => a - b) // 默认升序\n\n        console.log(\"气球数字大小数组：\", this.sortedNumbers)\n        console.log(\"气球大小数组：\", this.generatedScales)\n    }\n    checkBalloon(clickedNumber: number, clickedScale: number, spawnTime) {\n        // console.log(\"点击的时候的分数为\", this.flexibilityScore)\n        const clickTime = Date.now();\n        const elapsedTime = (clickTime - spawnTime) / 1000; // 计算响应时间（秒）\n        // console.log('响应时间，', elapsedTime)\n        let isCorrect = false;\n\n\n        if (this.gameMode === 'NUM') {\n            // 处理数字模式的逻辑\n            if (this.sortOrder === 'ASC') {\n                isCorrect = this.sortedNumbers[this.nextIndex] === clickedNumber;\n            } else { // 'descending'\n                isCorrect = this.sortedNumbers[this.sortedNumbers.length - 1 - this.nextIndex] === clickedNumber;\n            }\n        } else if (this.gameMode === 'SIZE') {\n            // 处理气球大小模式的逻辑\n            // 需要确定clickedScale与expectedScale的比较逻辑\n            let expectedScale = this.sortOrder === 'ASC' ? this.generatedScales[this.nextIndex] : this.generatedScales[this.generatedScales.length - 1 - this.nextIndex];\n            console.log('期望的大小，点击的大小：', expectedScale, clickedScale);\n            isCorrect = clickedScale === expectedScale;\n        }\n\n        if (isCorrect) {\n            console.log(\"点击正确!\", clickedNumber);\n            this.updateScore(true, elapsedTime);\n            this.nextIndex++; // 移动到下一个数字\n            if (this.nextIndex >= this.sortedNumbers.length) {\n                console.log(\"全部正确，下一关\");\n                if (this.audioSource && this.correctSound) {\n                    this.audioSource.playOneShot(this.correctSound, 1); // 播放正确音效\n                    this.showCheckImage(true); // 显示正确图片并重启游戏\n                    // 延迟重启游戏\n                    this.scheduleOnce(() => {\n                        this.restartSpawnBalloons();\n                    }, 0.3); // 给用户一点时间看提示图片\n                }\n\n            }\n        } else {\n            console.log(\"点击错误\", clickedNumber);\n            this.updateScore(false, elapsedTime);\n            // 点击错误的逻辑...\n            if (this.audioSource && this.wrongSound) {\n                this.audioSource.playOneShot(this.wrongSound, 1); // 播放错误音效\n            }\n            this.showCheckImage(false); // 显示错误图片\n            this.scheduleOnce(() => {\n                this.restartSpawnBalloons();\n            }, 0.3); // 给用户一点时间看提示图片\n        }\n    }\n\n    updateGameOverUIScore() {\n        // 结算界面得分增加动画 每次增加的数根据总分步长不一样\n        let gameOverScoreNumber = 0;\n        let incrementStep = 1;\n        if (this.flexibilityScore >= 30 && this.flexibilityScore < 100) {\n            incrementStep = 3;\n        } else if (this.flexibilityScore >= 100 && this.flexibilityScore < 300) {\n            incrementStep = 5;\n        } else if (this.flexibilityScore >= 300 && this.flexibilityScore < 600) {\n            incrementStep = 7;\n        } else if (this.flexibilityScore >= 600) {\n            incrementStep = 11;\n        }\n        const totalSteps = Math.ceil(this.flexibilityScore / incrementStep);\n        let currentStep = 0;\n        const animation = this.gameOverScoreLabel.getComponent(Animation);\n        // 播放数字变大的动画\n        if (animation) {\n            animation.play('ScoreNumberPop');\n        }\n\n        const intervalDuration = 2000 / totalSteps; // 根据总步数计算每步的时间间隔\n        const timer = setInterval(() => {\n            if (currentStep < totalSteps) {\n                currentStep++;\n                gameOverScoreNumber += incrementStep;\n                if (this.scoreSoundUp && this.scoreSoundUp) {\n                    this.audioSource.playOneShot(this.scoreSoundUp, 0.3);\n                }\n                this.gameOverScoreLabel.string = gameOverScoreNumber.toString();\n            } else {\n                clearInterval(timer);\n\n                if (this.flexibilityScore !== gameOverScoreNumber) {\n                    gameOverScoreNumber = this.flexibilityScore;\n                    this.gameOverScoreLabel.string = gameOverScoreNumber.toString();\n                }\n            }\n        }, intervalDuration); // 使用计算得到的时间间隔\n\n    }\n\n    // 在checkBalloon方法中更新灵活度得分\n    updateScore(isCorrect: boolean, elapsedTime: number = 0) {\n        // 在更新分数之前保存旧等级名\n        const oldLevelName = this.currentDifficultyLevel.name;\n        // 从当前难度级别获取得分增量\n        let scoreIncrement = this.currentDifficultyLevel.scoreIncrement;\n        // console.log(\"当前难度基础分=\" + scoreIncrement)\n        let timeAdjustedScoreIncrement = this.calculateTimeAdjustedScoreIncrement(elapsedTime, scoreIncrement);\n        // console.log(\"点击时间调整后得分=\" + timeAdjustedScoreIncrement)\n\n        // 确定分数的变化方向，正确增加分，错误减少双倍分\n        let scoreChange = isCorrect ? timeAdjustedScoreIncrement : -timeAdjustedScoreIncrement * 2;\n        // 如果答错，确保不会减到负分\n        if (!isCorrect && this.flexibilityScore + scoreChange < 0) {\n            scoreChange = -this.flexibilityScore; // 只减到0\n\n        }\n\n        // 计划的总步骤数，以及每次更新分数的步进值\n        const totalSteps = Math.abs(scoreChange); // 总共需要变化的步数等于分数变化量\n        let currentStep = 0;\n        // 播放分数变化动画\n        const animation = this.scoreLabel.getComponent(Animation);\n        if (animation) {\n            animation.play('ScoreNumberPop'); // 假设这是你的分数变化动画\n        }\n\n        const intervalDuration = 50; // 每次分数更新间隔时间，可以调整\n        const timer = setInterval(() => {\n            if (currentStep < totalSteps) {\n                this.flexibilityScore += (isCorrect ? 1 : -1); // 每步根据是正确还是错误增加或减少1分\n                this.scoreLabel.string = this.flexibilityScore.toString();\n                currentStep++;\n            } else {\n                clearInterval(timer); // 完成分数更新，清除计时器\n            }\n        }, intervalDuration);\n\n        // 播放对应的音效\n        if (this.audioSource) {\n            const soundClip = isCorrect ? this.scoreSoundUp : this.scoreSoundDown;\n            if (soundClip) {\n                this.audioSource.playOneShot(soundClip, 0.3); // 播放正确或错误的音效\n            }\n        }\n\n        // // 基于新分数更新难度级别\n        // this.updateDifficultyBasedOnScore(this.flexibilityScore, scoreChange);\n        // // 在更新难度级别之后，检查等级是否发生变化\n        // const newLevelName = this.currentDifficultyLevel.name;\n        // if (oldLevelName !== newLevelName) {\n        //     // 确定是升级还是降级，并播放相应的声音\n        //     // console.log('确定是升级还是降级，并播放相应的声音', oldLevelName, newLevelName)\n        //     this.handleLevelChangeFeedback(oldLevelName, newLevelName);\n        // }\n    }\n    // 计算时间调整后的得分增量\n    calculateTimeAdjustedScoreIncrement(elapsedTime: number, scoreIncrement: number): number {\n        const timeThresholds = [3, 4, 5, 6]; // 时间阈值，单位秒\n        const scorePenalties = [0, 1, 2, 3]; // 对应的得分减少值\n\n        let timeAdjustedScoreIncrement = scoreIncrement; // 默认满分\n\n        // 通过时间阈值判断减分\n        for (let i = 0; i < timeThresholds.length; i++) {\n            if (elapsedTime > timeThresholds[i]) {\n                // 递增减分，但保证分数不低于1分\n                timeAdjustedScoreIncrement = Math.max(scoreIncrement - scorePenalties[i], 1);\n            } else {\n                break; // 如果未超过当前时间阈值，直接结束循环\n            }\n        }\n        // 额外的时间段（超过6秒）\n        if (elapsedTime > 6) {\n            const extraTime = elapsedTime - 6;\n            // 每额外2秒减1分，但总分不低于1\n            const extraPenalty = Math.min(Math.floor(extraTime / 2), scoreIncrement - 1);\n            timeAdjustedScoreIncrement = Math.max(scoreIncrement - extraPenalty, 1);\n        }\n\n        return timeAdjustedScoreIncrement;\n    }\n\n\n    handleLevelChangeFeedback(oldLevelName: string, newLevelName: string) {\n\n        // 获取旧等级和新等级在配置中的索引\n        const oldIndex = Object.keys(difficultyConfig).findIndex(key => difficultyConfig[key].name === oldLevelName);\n        const newIndex = Object.keys(difficultyConfig).findIndex(key => difficultyConfig[key].name === newLevelName);\n\n        // 等级变化逻辑...\n        if (newIndex > oldIndex) {\n            // 等级提升逻辑\n            this.audioSource.playOneShot(this.levelUpSound, 1);\n            this.scheduleOnce(() => {\n                this.audioSource.playOneShot(this.levelUpVocalSound, 1);\n            }, 0.5); // \n\n        } else if (newIndex < oldIndex) {\n            // 等级降低逻辑\n            this.audioSource.playOneShot(this.levelDownSound, 1);\n        }\n\n        this.levelChangeUIAnimation.play('levelChange'); // 播放升级动画\n        // 更新等级显示文本\n        this.levelChangeLabel.string = `${newLevelName}`;\n\n\n        this.currentLevelString = newLevelName\n\n\n    }\n\n    showCheckImage(isCorrect: boolean) {\n        // 播放正确错误图案\n        if (isCorrect) {\n            this.correctImage.active = true;\n            this.scheduleOnce(() => {\n                this.correctImage.active = false;\n            }, 0.3); // 1秒后隐藏\n        } else {\n            this.wrongImage.active = true;\n            this.scheduleOnce(() => {\n                this.wrongImage.active = false;\n            }, 0.3); // 1秒后隐藏\n        }\n    }\n    destroyAllBalloons() {\n        // 遍历 playArea 的所有子节点 \n        this.playArea.children.slice().forEach(balloon => {\n            // 检查节点是否具有 Balloon 组件\n            if (balloon.getComponent(Balloon)) {\n                // 如果是气球节点，则销毁它\n                balloon.destroy();\n            }\n        });\n    }\n}\n"]}